CREATE OR REPLACE PROCEDURE STATS_APEX.QA_CREATE_SQL(RULE_TYPE VARCHAR2)
AS
CURSOR QA_CUR IS
SELECT QBA.RULE_ID, 
            COMP_TYPE, 
            SCHEMA_1, 
            TABLE_1,
            COLUMN_1,
            SCHEMA_2,
            TABLE_2,
            COLUMN_2,
            EXEC_STATUS,
            RULE_DESC,
            TO_CHAR(EXEC_TIME,'MM/DD/YYYY HH:MI:SS AM') EXEC_TIME,
            JOIN_COLUMN_1,
            JOIN_COLUMN_2,
            UNJOIN_COLUMN_1,
            UNJOIN_COLUMN_2,
            DIFF_COLUMN_1,
            DIFF_COLUMN_2,
            THRESHOLD,
            GROUPBY_COLUMN
FROM STATS_APEX.QA_BUSINESS_RULES QBA
INNER JOIN QA_EXEC_SCHEDULE QES
           ON QBA.RULE_ID = QES.RULE_ID
WHERE NOT NVL(EXEC_STATUS,'READY') IN ('RUN','HOLD')
AND NVL(DELIVERED,'N') = 'N'
AND COMP_TYPE = RULE_TYPE
AND QES.EXEC_TIME BETWEEN (CURRENT_TIMESTAMP - NUMTODSINTERVAL(5, 'MINUTE'))  AND (CURRENT_TIMESTAMP + NUMTODSINTERVAL(5, 'MINUTE') );

TYPE QA_TBL IS TABLE OF QA_CUR%ROWTYPE;
QA_SQL_TBL QA_TBL;

BEGIN


OPEN QA_CUR;

CASE RULE_TYPE

WHEN 'CMC' THEN

LOOP
FETCH QA_CUR BULK COLLECT INTO QA_SQL_TBL LIMIT 1000;

FORALL i IN 1..QA_SQL_TBL.COUNT
UPDATE QA_BUSINESS_RULES
SET EXEC_STATUS = 'RUN'
WHERE RULE_ID = QA_SQL_TBL(i).RULE_ID;


FORALL i IN 1..QA_SQL_TBL.COUNT
INSERT INTO QA_SQL (RULE_ID, HEADER_SQL,DATA_SQL,EXEC_TIME)
VALUES(QA_SQL_TBL(i).RULE_ID,
            'SELECT '''||REPLACE(TRIM(':' FROM QA_SQL_TBL(i).COLUMN_1||':'||QA_SQL_TBL(i).COLUMN_2)||''','''||QA_FORMAT_COLUMNS('PERCENTHEADER',QA_SQL_TBL(i).DIFF_COLUMN_1,QA_SQL_TBL(i).DIFF_COLUMN_2),':',''',''')||''' FROM DUAL',
            'SELECT '||REPLACE(TRIM(':' FROM QA_SQL_TBL(i).COLUMN_1||':'||QA_SQL_TBL(i).COLUMN_2)||','||QA_FORMAT_COLUMNS('PERCENT',QA_SQL_TBL(i).DIFF_COLUMN_1,QA_SQL_TBL(i).DIFF_COLUMN_2),':',',')||
            ' FROM '||QA_SQL_TBL(i).SCHEMA_1||'.'||QA_SQL_TBL(i).TABLE_1||' A INNER JOIN '||QA_SQL_TBL(i).SCHEMA_2||'.'||QA_SQL_TBL(i).TABLE_2||' B 
                ON '||QA_FORMAT_COLUMNS('JOIN',QA_SQL_TBL(i).JOIN_COLUMN_1,QA_SQL_TBL(i).JOIN_COLUMN_2)||
            ' WHERE ABS('||QA_FORMAT_COLUMNS('PERCENTABS',QA_SQL_TBL(i).DIFF_COLUMN_1,QA_SQL_TBL(i).DIFF_COLUMN_2,QA_SQL_TBL(i).THRESHOLD),
            TO_DATE(QA_SQL_TBL(i).EXEC_TIME,'MM/DD/YYYY HH:MI:SS AM'));


EXIT WHEN QA_CUR%NOTFOUND;
END LOOP;

WHEN 'C2C' THEN

LOOP
FETCH QA_CUR BULK COLLECT INTO QA_SQL_TBL LIMIT 1000;

FORALL i IN 1..QA_SQL_TBL.COUNT
UPDATE QA_BUSINESS_RULES
SET EXEC_STATUS = 'RUN'
WHERE RULE_ID = QA_SQL_TBL(i).RULE_ID;

FORALL i IN 1..QA_SQL_TBL.COUNT
INSERT INTO QA_SQL (RULE_ID, HEADER_SQL,DATA_SQL,EXEC_TIME)
VALUES(QA_SQL_TBL(i).RULE_ID,
            'SELECT ''TABLE DIFFERENCES'','''||REPLACE(TRIM(':' FROM QA_SQL_TBL(i).COLUMN_1||':'||QA_SQL_TBL(i).COLUMN_2),':',''',''')||''' FROM DUAL',
            'SELECT CASE WHEN '||QA_FORMAT_COLUMNS('ISNULLAND',QA_SQL_TBL(i).JOIN_COLUMN_1)||'THEN ''TARGET TABLE DIFFERENCES''
                                 WHEN '||QA_FORMAT_COLUMNS('ISNULLAND',QA_SQL_TBL(i).JOIN_COLUMN_2)||'THEN ''SOURCE TABLE DIFFERENCES'' 
                                 ELSE ''MATCHED DIFFERENCES'' END,'||REPLACE(TRIM(':' FROM QA_SQL_TBL(i).COLUMN_1||':'||QA_SQL_TBL(i).COLUMN_2),':',',')||
                                 ' FROM '||QA_SQL_TBL(i).SCHEMA_1||'.'||QA_SQL_TBL(i).TABLE_1||' A 
                                 FULL JOIN '||QA_SQL_TBL(i).SCHEMA_2||'.'||QA_SQL_TBL(i).TABLE_2||' B 
                                 ON '||QA_FORMAT_COLUMNS('JOIN',QA_SQL_TBL(i).JOIN_COLUMN_1,QA_SQL_TBL(i).JOIN_COLUMN_2)||' WHERE '||QA_FORMAT_COLUMNS('ISNULLOR',TRIM(':' FROM QA_SQL_TBL(i).JOIN_COLUMN_1||':'||QA_SQL_TBL(i).JOIN_COLUMN_2))||
                                 ' OR '||QA_FORMAT_COLUMNS('UNJOIN',QA_SQL_TBL(i).UNJOIN_COLUMN_1,QA_SQL_TBL(i).UNJOIN_COLUMN_2),
                                 TO_DATE(QA_SQL_TBL(i).EXEC_TIME,'MM/DD/YYYY HH:MI:SS AM'));


EXIT WHEN QA_CUR%NOTFOUND;
END LOOP;


WHEN 'SQL' THEN

LOOP
FETCH QA_CUR BULK COLLECT INTO QA_SQL_TBL LIMIT 1000;

FORALL i IN 1..QA_SQL_TBL.COUNT
UPDATE QA_BUSINESS_RULES
SET EXEC_STATUS = 'RUN'
WHERE RULE_ID = QA_SQL_TBL(i).RULE_ID;

FORALL i IN 1..QA_SQL_TBL.COUNT
INSERT INTO QA_SQL (RULE_ID, HEADER_SQL,DATA_SQL,EXEC_TIME)
VALUES(QA_SQL_TBL(i).RULE_ID,
            'SELECT '''||REPLACE(QA_SQL_TBL(i).COLUMN_1,':',''',''')||''' FROM DUAL',
            'SELECT '||REPLACE(QA_SQL_TBL(i).COLUMN_1,':',',')||
                                 ' FROM '||QA_SQL_TBL(i).SCHEMA_1||'.'||QA_SQL_TBL(i).TABLE_1||' A 
                                  WHERE '||QA_SQL_TBL(i).COLUMN_2||' = ''E''',
                                 TO_DATE(QA_SQL_TBL(i).EXEC_TIME,'MM/DD/YYYY HH:MI:SS AM'));


EXIT WHEN QA_CUR%NOTFOUND;
END LOOP;

END CASE RULE_TYPE; 

COMMIT;

END;
/
