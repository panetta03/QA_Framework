CREATE OR REPLACE PROCEDURE STATS_APEX.QA_CREATE_SCHEDULE(rule_id IN INTEGER,schedule IN CHAR, months IN VARCHAR2, years IN VARCHAR2, days IN VARCHAR2, hours IN VARCHAR2, minutes IN VARCHAR2, ampm IN VARCHAR2)
AS 

BEGIN

IF schedule = 'Y' THEN

INSERT INTO QA_EXEC_SCHEDULE(RULE_ID,EXEC_TIME)
SELECT * FROM (
    SELECT RULE_ID, TO_TIMESTAMP(TO_TIMESTAMP(TO_CHAR(TO_DATE(MONTHS.COLUMN_VALUE,'MM'),'MM')||DAYS.COLUMN_VALUE||YEARS.COLUMN_VALUE||' '||HOURS.COLUMN_VALUE||':'||MINUTES.COLUMN_VALUE||' '||AMPM.COLUMN_VALUE,'MMDDYYYY HH:MI AM')) EXEC_TIME
    FROM (SELECT * FROM TABLE(string_to_selectable_table(months, ':'))) MONTHS
    CROSS JOIN (SELECT COLUMN_VALUE FROM TABLE(string_to_selectable_table(days, ':'))) DAYS
    CROSS JOIN (SELECT COLUMN_VALUE FROM TABLE(string_to_selectable_table(years, ':'))) YEARS
    CROSS JOIN (SELECT COLUMN_VALUE FROM TABLE(string_to_selectable_table(hours, ':'))) HOURS
    CROSS JOIN (SELECT COLUMN_VALUE FROM TABLE(string_to_selectable_table(minutes, ':'))) MINUTES
    CROSS JOIN (SELECT COLUMN_VALUE FROM TABLE(string_to_selectable_table(ampm, ':'))) AMPM
    WHERE F_DATE(TO_CHAR(TO_DATE(MONTHS.COLUMN_VALUE,'MM'),'MM')||DAYS.COLUMN_VALUE||YEARS.COLUMN_VALUE||' '||HOURS.COLUMN_VALUE||':'||MINUTES.COLUMN_VALUE||' '||AMPM.COLUMN_VALUE) = 1 
    );
    

END IF;

EXCEPTION WHEN OTHERS THEN

RAISE_APPLICATION_ERROR(-20100, 'Schedule Creation Error');

END;
/
